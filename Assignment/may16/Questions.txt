Q1. Write a JavaScript function to check whether an `input` is an array or not.
File name suggestion: ifArray.js
Test Data :
console.log(ifArray(‘w3resource’)); // false
console.log(ifArray([1, 2, 4, 0])); // true (edited) 


Q2.  Write a JavaScript function to clone an array.
File name suggestion: arrayClone.js
Test Data :
console.log(arrayClone([1, 2, 4, 0])); // [1, 2, 4, 0]
console.log(arrayClone([1, 2, [4, 0]])); // [1, 2, [4, 0]]
Hint: Use some array iterator function (map). (edited) 


Q3. Write a JavaScript function to get the first ‘n’ elements of an array. Passing a parameter ‘n’ will return the first ‘n’ elements of the array. 
File name suggestion: first.js
Test Data :
console.log(first([7, 9, 0, -2])); // 7
console.log(first([],3)); // []
console.log(first([7, 9, 0, -2],3)); // [7, 9, 0]
console.log(first([7, 9, 0, -2],6)); // [7, 9, 0, -2]
console.log(first([7, 9, 0, -2],-3)); // [] (edited) 


Q4. Write a JavaScript function to get the last element of an array. Passing a parameter ‘n’ will return the last ‘n’ elements of the array.
File name suggestion: last.js
Test Data :
console.log(last([7, 9, 0, -2])); // -2
console.log(last([7, 9, 0, -2],3)); // [9, 0, -2]
console.log(last([7, 9, 0, -2],6)); // [7, 9, 0, -2]


Q5. Write a simple JavaScript program to join all elements of the array into a string. 
File name suggestion: join.js
TestData:
console.log(join([“Red”, “Green”, “White”, “Black”])); // “Red,Green,White,Black”
console.log(join([“Red”, “Green”, “White”, “Black”], ‘’)); // “RedGreenWhiteBlack”
console.log(join([“Red”, “Green”, “White”, “Black”], ‘,’)); // “Red,Green,White,Black”
console.log(join([“Red”, “Green”, “White”, “Black”], ‘+’)); // “Red+Green+White+Black” (edited) 


Q6. Write a JavaScript program which accept a number as input and insert dashes (-) between each two even numbers.
File name suggestion: insert.js
TestData:
console.log(insert(025468)); // “0-254-6-8.”
console.log(insert(357)); // 357
console.log(insert(12345)); // 12345


Q7. Write a JavaScript program to sort the items of an array.
File name suggestion: sortNumArr.js
TestData:
console.log(sortNumArr([3, 8, 7, 6, 5, -4, 3, 2, 1])); // [-4,-3,1,2,3,5,6,7,8] (edited) 


Q8. Write a JavaScript program to find the most frequent item of an array. 
File name suggestion: frequent.js
TestData:
console.log(frequent([3, ‘a’, ‘a’, ‘a’, 2, 3, ‘a’, 3, ‘a’, 2, 4, 9, 3])); // a ( 5 times )
console.log(frequent([1, 2, 3, 4, 5])); // 1 ( 1 time )
console.log(frequent([5, 2, 3, 1, 2, 4, 1])); // 2 ( 2 times )


Q9. Write a JavaScript program which accept a string as input and reverses it.
File name suggestion: reverse.js
TestData:
console.log(reverse(‘I love my India’)); // ‘India my love I’
console.log(reverse(‘Oh my Oh’)); // ‘Oh my Oh’


Q10. Write a JavaScript program which prints the matrix of the following array. 
File name suggestion: matrix.js
TestData:
console.log(matrix([[1, 2, 1, 24], [8, 11, 9, 4], [7, 0, 7, 27], [7, 4, 28, 14], [3, 10, 26, 7]]));
Sample Output :
[[1, 2, 1, 24],
[8, 11, 9, 4],
[7, 0, 7, 27],
[7, 4, 28, 14],
[3, 10, 26, 7]]


Q11. Write a JavaScript program to compute the sum of an array of integers.
File name suggestion: sum.js
TestData:
console.log(sum([1, 2, 3, 4])); // 10
console.log(sum([0, 0, 0, 1])); // 1 (edited) 


Q12. Write a JavaScript program to compute the product of an array of integers.
File name suggestion: product.js
TestData:
console.log(product([1, 2, 3, 4])); // 24
console.log(product([1, 4, 7, 0])); // 0


Q13. Write a JavaScript program to remove duplicate items from an array (ignore case sensitivity).
File name suggestion: removeDuplicates.js
TestData:
console.log(removeDuplicates([1, 2, 3, 4, 6, 1, 3])); // [1, 2, 3, 4, 6]
console.log(removeDuplicates([1, 4, 7, 0])); // [1, 4, 7, 0]


Q14. There are two arrays with individual values, write a JavaScript program to compute the sum of each individual index value from the given arrays. 
File name suggestion: indexSum.js
TestData:
console.log(indexSum([1,0,2,3,4], [3,5,6,7,8,13])); // [4, 5, 8, 10, 12, 13]
console.log(indexSum([1, 2, 3, 4, 6, 1, 3], [1, 4, 7, 0])); // [2, 6, 10, 4, 6, 1, 3]


Q15. Write a JavaScript program to compute the union of two arrays. 
File name suggestion: unionSort.js
TestData:
console.log(unionSort([1,0,2,3,4], [3,5,6,7,8,13])); // [0, 1, 2, 3, 4, 5, 6, 7, 8, 13]
console.log(unionSort([1, 2, 3, 4, 6, 1, 3], [1, 4, 7, 0])); // [0, 1, 2, 3, 4, 6, 7]
console.log(unionSort([1, 2, 3], [100, 2, 1, 10])); // [1, 2, 3, 10, 100] (edited) 


Q16. Write a JavaScript function to remove null, 0, ‘’, “”, false, undefined and NaN values from an array.
File name suggestion: removeValues.js
TestData:
console.log(removeValues([NaN, 0, 15, false, -22, ‘’,undefined, 47, null])); // [15, -22, 47]


Q17. Write a JavaScript function to create a specified number of elements with pre-filled string value array. 
File name suggestion: createArray.js
Test Data :
console.log(createArray(3, ‘default value’)); // [“default value”, “default value”, “default value”]
console.log(createArray(4, ‘password’)); // [“password”, “password”, “password”, “password”]


Q18. Write a JavaScript function to generate an array between two integers of ‘n’ step length. 
File name suggestion: rangeBetween.js
Test Data :
console.log(rangeBetween(4, 7, 1)); // [4, 5, 6, 7]
console.log(rangeBetween(-4, 7, 2)); // [-4, -2, 0, 2, 4, 6]


Q19. Write a JavaScript function to find the unique elements from two arrays. 
File name suggestion: differenceSorted.js
Test Data :
console.log(differenceSorted([1, 2, 3], [100, 2, 1, 10])); // [“1”, “2", “3”, “10", “100”]
console.log(differenceSorted([1, 2, 3, 4, 5], [6, 1, 2, 3, 4, 5])); // [“1", “2”, “3", “4”, “5", “6”]
console.log(differenceSorted([1, 2, 3], [100, 2, 1, 10])); // [“1", “2”, “3", “10”, “100"]


Q20. Write a JavaScript program to list the properties of a JavaScript object.
File name suggestion: keys.js
Test Data :
console.log(keys({
   name : “David Rayy”,
   sclass : “VI”,
   rollno : 12
})); // name,sclass,rollno
Hint: Use object methods (edited) 


Q21. Write a JavaScript program to list the values of a JavaScript object.
File name suggestion: values.js
Test Data :
console.log(values({
   name : “David Rayy”,
   sclass : “VI”,
   rollno : 12
})); // David Rayy,VI,12
Hint: Use object methods (edited) 



Q22. Write a JavaScript program to get the length of a JavaScript object. 
File name suggestion: keyLength.js
Test Data :
console.log(keyLength({
   name : “David Rayy”,
   sclass : “VI”,
   rollno : 12
})); // 3
Hint: Use object methods (edited) 



Q23. Write a JavaScript program to display the reading status (i.e. display book name, author name and reading status) of the following books.
File name suggestion: book.js
Test Data :
console.log(book([ 
   {
       author: 'Bill Gates',
       title: 'The Road Ahead',
       readingStatus: true
   },
   {
       author: 'Steve Jobs',
       title: 'Walter Isaacson',
       readingStatus: true
   },
   {
       author: 'Suzanne Collins',
       title:  'Mockingjay: The Final Book of The Hunger Games', 
       readingStatus: false
   }
]));
Output:
Already read 'Bill Gates' by The Road Ahead.
Already read 'Steve Jobs' by Walter Isaacson.
You still need to read 'Mockingjay: The Final Book of The Hunger Games' by Suzanne Collins.



Q24. Write a JavaScript function to get a copy of the object where the keys have become the values and the values the keys.
File name suggestion: invert.js
Test Data :
console.log(invert([ 
   {
       author: 'Bill Gates',
       title: 'The Road Ahead',
       readingStatus: true
   },
   {
       author: 'Steve Jobs',
       title: 'Walter Isaacson',
       readingStatus: true
   },
   {
       author: 'Suzanne Collins',
       title:  'Mockingjay: The Final Book of The Hunger Games', 
       readingStatus: false
   }
]));
Output:
[ 
   {
       'Bill Gates': 'author',
       'The Road Ahead': 'title',
       true: 'readingStatus'
   },
   {
       'Steve Jobs': 'author',
       'Walter Isaacson': 'title',
       true: 'readingStatus
   },
   {
       'Suzanne Collins': 'author',
       'Mockingjay: The Final Book of The Hunger Games': 'title',
       false: 'readingStatus
   }
]


Q25. Write a JavaScript function to check whether an object contains given property.
File name suggestion: findProperty.js
Test Data :
console.log(findProperty({
   author: 'Bill Gates',
   title: 'The Road Ahead',
   readingStatus: true
}, 'author')); // true
console.log(findProperty({
   author: 'Bill Gates',
   title: 'The Road Ahead',
   readingStatus: true
}, 'hello')); // false


Q26. Write a JavaScript program to sort the items of an array.
File name suggestion: sortStrArr.js
TestData:
console.log(sortStrArr([“Banana”, “Orange”, “Apple”, “Mango”])); // [Apple, Banana, Mango, Orange]


Q27. Write a JavaScript program to sort the items of an array.
File name suggestion: sortObjArr.js
TestData:
console.log(sortObjArr([
  {type:“Volvo”, year:2016},
  {type:“Saab”, year:2001},
  {type:“BMW”, year:2010}
], type)); // [{
  {type:“BMW”, year:2010}
  {type:“Saab”, year:2001},
  {type:“Volvo”, year:2016},
}]
console.log(sortObjArr([
  {type:“Volvo”, year:2016},
  {type:“Saab”, year:2001},
  {type:“BMW”, year:2010}
], year)); // [{
  {type:“Saab”, year:2001},
  {type:“BMW”, year:2010}
  {type:“Volvo”, year:2016},
}]